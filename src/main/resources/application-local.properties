#spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.url=jdbc:postgresql://localhost:5432/SHOP
spring.datasource.username=postgres
spring.datasource.password=mae2016
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

#spring data rest configuration
#spring.data.rest.defaultMediaType=application/hal+json
#spring.data.rest.basePath=/api
#spring.data.rest.defaultPageSize=20
#spring.data.rest.maxPageSize=100
#spring.data.rest.pageParamName=offset
#spring.data.rest.limitParamName=limit
#spring.data.rest.sortParamName=sort

#tomcat configuration
server.compression.enabled=true
server.compression.mime-types=application/json,application/hal+json
server.tomcat.basedir=var/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=common

logging.level.root=INFO
logging.level.org.hibernate=WARN
logging.config=src/main/resources/log4j2-local.yaml

# REDIS (RedisProperties)
spring.redis.database=0
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.

#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.

#jwt.secret=${JWT_SECRET}
jwt.secret=mySecretKey